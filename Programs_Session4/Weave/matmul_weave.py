import numpy as np
import time
import scipy.weave as weave

M1   = 10
N1M2 = 500
N2   = 10

a = np.empty((M1,N1M2), dtype=np.float64)
b = np.empty((N1M2,N2), dtype=np.float64)
c = np.empty((M1,N2), dtype=np.float64)

a[:] = np.random.rand(M1,N1M2)
b[:] = np.random.rand(N1M2,N2)

def matmul_weave(mat1, mat2, res):

    code = """
    // Local Variable Declaration
    int i, j, k, r1, r2, c1, c2;
    // These are auto-generated by weave!
    r1 = Nmat1[0]; // Dimension Variable for mat1
    r2 = Nmat2[0]; // Dimension Variable for mat2
    c1 = Nmat1[1];
    c2 = Nmat2[1];
    for (i=0; i<r1; i++)
    {
        for(j=0; j<c1; j++)
        {
            RES2(i,j) = 0;      // Write input variables in Uppercase and add "2" to the name
                                // Use () instead of [] for indices
            for(k=0; k<c2; k++)
            {
                RES2(i,j) += MAT12(i,k)*MAT22(k,j);
            }
        }
    }
    """
    weave.inline(code, arg_names=['mat1', 'mat2', 'res'])

# Numpy
start = time.time()
c = np.dot(a,b)
stop = time.time()
print('Numpy took ',(stop - start)*1000,'milli-seconds')

c = np.zeros((M1,N2), dtype=np.float64)

# Python
start = time.time()
for i in range(0, M1):
    for j in range(0, N2):
        for k in range(0, N1M2):
            c[i,j] += a[i,k]*b[k,j]

stop = time.time()
print('Python took ',(stop - start)*1000,'milli-seconds')

c = np.zeros((M1,N2), dtype=np.float64)

# Weave call
start = time.time()
matmul_weave( a, b, c )
stop = time.time()
print('Weave took ',(stop - start)*1000,'milli-seconds')
